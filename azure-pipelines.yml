
#Multi-stage Build and Deploy pipeline
# Build and push image to Azure Container Registry; Deploy to Azure Kubernetes Service
trigger:
  - master
  - features/*

variables:
  # Name of the image in the docker repo
  imageRepository: 'seed-archetype'
  # Location of the Dockerfile used to build the image
  dockerfilePath: 'Dockerfile'
  # Service connections (defined in the Pipeline properties)
  kubernetesServiceConnection: 'scrs-dev-ocado-inbound-nonprod-aks-scrs-dev-1586917440706'
  # kubernetesServiceConnection and environment variables are tied to each other, change in either would change the other.
  environment: 'scrs-dev'
  dockerRegistryServiceConnection: 'scrsContainerRegistry'
  containerRegistry: 'scrscontainerregistry.azurecr.io'

  tag: '$(Build.BuildNumber)'
  # Agent VM image name
  vmImageName: 'ubuntu-latest'

# ------ BUILD STAGE ------
stages:
  - stage: Build
    displayName: Build stage
    jobs:
      - job: Build
        displayName: Build
        pool:
          vmImage: $(vmImageName)
        steps:
          - task: Docker@2
            inputs:
              containerRegistry: 'scrsContainerRegistry'
              command: 'login'

          - task: Maven@3
            displayName: Maven Build
            inputs:
              mavenPomFile: 'service/pom.xml'
              goals: 'package'
              publishJUnitResults: true
              testResultsFiles: '**/surefire-reports/TEST-*.xml'
              testRunTitle: 'Packaging!'
              javaHomeOption: 'JDKVersion'
              jdkVersionOption: '1.11'
              mavenVersionOption: 'Default'
              mavenAuthenticateFeed: true
              effectivePomSkip: false
              sonarQubeRunAnalysis: false

          - task: Maven@3
            displayName: Maven E2E Testing and Verification
            inputs:
              mavenPomFile: 'e2e/pom.xml'
              goals: 'verify'
              publishJUnitResults: true
              testResultsFiles: '**/surefire-reports/E2E-*.xml'
              testRunTitle: 'Running unit tests!!!'
              javaHomeOption: 'JDKVersion'
              jdkVersionOption: '1.11'
              mavenVersionOption: 'Default'
              mavenAuthenticateFeed: true
              effectivePomSkip: false
              sonarQubeRunAnalysis: false

          - task: Docker@2
            displayName: Dockerize
            condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
            inputs:
              command: buildAndPush
              repository: $(imageRepository)
              dockerfile: $(dockerfilePath)
              containerRegistry: $(dockerRegistryServiceConnection)
              tags: |
                $(tag)

          - publish: manifests
            artifact: manifests

  # ------- DEPLOYMENT STAGE --------
  - stage: Deploy
    displayName: Deploy stage
    dependsOn: Build
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))

    jobs:
      - deployment: Deploy
        displayName: Deploy
        pool:
          vmImage: $(vmImageName)
        environment: $(environment)
        strategy:
          runOnce:
            deploy:
              steps:
                - task: KubernetesManifest@0
                  displayName: Deploy to Kubernetes cluster
                  inputs:
                    action: deploy
                    kubernetesServiceConnection: $(kubernetesServiceConnection)
                    manifests: |
                      $(Pipeline.Workspace)/manifests/deployment.yml
                    containers: |
                      $(containerRegistry)/$(imageRepository):$(tag)
